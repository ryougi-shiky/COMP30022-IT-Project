name: Deploy Test App to AWS ECS (Fargate Spot)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type YES to confirm deployment"
        required: true
        default: "NO"
  push:
#    branches:
#      - "deploy-test-app"
    branches-ignore: ["*"]

jobs:
  deploy-test-app-to-aws-ecs-fargate:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_DEPLOY_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}
        audience: sts.amazonaws.com

    - name: Terraform Deploy App
      run: |
        cd infra/test/aws
        terraform init
        terraform plan
        terraform apply -auto-approve

    - name: Save Terraform Infra state
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: terraform-infra.tfstate
        path: infra/test/aws/terraform.tfstate

    - name: Output ALB
      run: |
        cd infra/aws/test
        echo "ALB: $(../.. /auto/run-terraform output -raw alb_dns)"

#  post-deploy-destroy-resources:
#    runs-on: ubuntu-22.04
#    if: always()
#    needs:
#      - deploy-test-app-to-aws-ecs-fargate
#      - bootstrap-iam-role
#    permissions:
#      contents: read
#      id-token: write
#
#    steps:
#    - uses: actions/checkout@v4
#
#    - name: Configure AWS credentials (admin, temporary)
#      uses: aws-actions/configure-aws-credentials@v2
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: ${{ secrets.AWS_REGION }}
#
#    - name: Download Terraform IAM state
#      uses: actions/download-artifact@v4
#      with:
#        name: terraform-iam.tfstate
#        path: infra/modules/github-actions-oidc-role/aws/iam-test
#
#    - name: Terraform Destroy IAM
#      run: |
#        cd infra/modules/github-actions-oidc-role/aws/iam-test
#        terraform init
#        terraform plan
#        terraform destroy -auto-approve
#
#    - name: Download Terraform Infra state
#      uses: actions/download-artifact@v4
#      with:
#        name: terraform-infra.tfstate
#        path: infra/test/aws
#
#    - name: Terraform Destroy Infra
#      run: |
#        cd infra/test/aws
#        terraform init
#        terraform plan
#        terraform destroy -auto-approve
