name: Run E2E Test on AWS ECS
on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type YES to confirm deployment"
        required: true
        default: "NO"
  push:
    branches:
      - remove-alb-in-test-env

permissions:
  id-token: write
  contents: read

jobs:
  deploy-infra:
    runs-on: ubuntu-22.04
#    if: startsWith(github.ref, 'refs/heads/release/') && github.event.inputs.confirm == 'YES'
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (admin, temporary)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

# Only create the IAM role once unless you have to delete and recreate it...
#      - name: Terraform Creating IAM Role
#        run: |
#          cd infra/modules/github-actions-oidc-role/aws/iam-test
#          terraform init
#          terraform plan
#          terraform apply -auto-approve
#
#      - name: Save Terraform IAM state
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: terraform-iam.tfstate
#          path: infra/modules/github-actions-oidc-role/aws/iam-test/terraform.tfstate

      - name: Terraform Creating Infra
        run: |
          cd infra/test/aws
          terraform init
          terraform plan
          terraform apply -auto-approve

      - name: Save Terraform State
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terraform-infra.tfstate
          path: infra/test/aws/terraform.tfstate

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_DEPLOY_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Terraform Deploy App (Test Environment)
        run: |
          cd deploy/test/aws
          terraform init
          terraform plan
          terraform apply -auto-approve

      - name: Save Terraform Test App state
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terraform-test-app.tfstate
          path: deploy/test/aws/terraform.tfstate

      - name: Output ALB
        id: alb
        run: |
          cd deploy/test/aws
          alb_dns=$(terraform output -raw alb_dns_name)
          echo "ALB DNS: $alb_dns"
          echo "alb_dns=$alb_dns" >> $GITHUB_OUTPUT

      - name: Run Cypress E2E Test on ALB
        run: |
          auto/run-e2e-tests-on-deployed-app ${{ steps.alb.outputs.alb_dns }}


  post-deploy-destroy-resources:
    runs-on: ubuntu-22.04
    if: always()
    needs:
      - deploy-infra
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials (admin, temporary)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

#    - name: Download Terraform IAM state
#      uses: actions/download-artifact@v4
#      with:
#        name: terraform-iam.tfstate
#        path: infra/modules/github-actions-oidc-role/aws/iam-test
#
#    - name: Terraform Destroy IAM
#      run: |
#        cd infra/modules/github-actions-oidc-role/aws/iam-test
#        terraform init
#        terraform plan
#        terraform destroy -auto-approve

    - name: Download Test App tfstate
      uses: actions/download-artifact@v4
      with:
        name: terraform-test-app.tfstate
        path: deploy/test/aws

    - name: Terraform Destroy Test App
      run: |
        cd deploy/test/aws
        terraform init
        terraform plan
        terraform destroy -auto-approve

    - name: Download Infra tfstate
      uses: actions/download-artifact@v4
      with:
        name: terraform-infra.tfstate
        path: infra/test/aws

    - name: Terraform Destroy Infra
      run: |
        cd infra/test/aws
        terraform init
        terraform plan
        terraform destroy -auto-approve
