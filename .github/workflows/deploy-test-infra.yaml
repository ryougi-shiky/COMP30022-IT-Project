name: Deploy Test Environment Infra

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type YES to confirm deployment"
        required: true
        default: "NO"
  push:
    branches:
      - "deploy-test-app"
#    branches-ignore: ["*"]

jobs:
  deploy-infra:
    runs-on: ubuntu-22.04
#    if: startsWith(github.ref, 'refs/heads/release/')
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (admin, temporary)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Check if IAM Role exists
        id: check_iam
        run: |
          if aws iam get-role --role-name github-action-deploy-role 2>/dev/null; then
            echo "ROLE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "ROLE_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Terraform Creating IAM Role
        run: |
          cd infra/modules/github-actions-oidc-role/aws/iam-test
          terraform init
          terraform plan
          terraform apply -auto-approve

      - name: Save Terraform IAM state
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terraform-iam.tfstate
          path: infra/modules/github-actions-oidc-role/aws/iam-test/terraform.tfstate

      - name: Terraform Creating Infra
        run: |
          cd infra/test/aws
          terraform init
          terraform plan
          terraform apply -auto-approve

      - name: Save Terraform State
        uses: actions/upload-artifact@v4
        with:
          name: terraform-infra.tfstate
          path: infra/test/aws/terraform.tfstate
