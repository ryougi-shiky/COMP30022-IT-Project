version: "3.9"
services:
  client:
    build:
      context: ./client  # 假设你的前端 Dockerfile 在 frontend 文件夹中
      dockerfile: Dockerfile # 或者你的前端 Dockerfile 的文件名
    ports:
      - "3000:3000"
    environment:
      # 前端应用可能需要的环境变量，例如后端 API 的地址
      REACT_APP_BACKEND_URL: "http://localhost:5000" # 假设后端运行在 localhost:5000
      REACT_APP_SOCKET_URL: http://localhost:8008
      REACT_APP_SOCKET_SERVER_PORT: 8008
      REACT_APP_OPEN_WEATHER_RAPID_API_KEY: "9c4b3c4369msh7ff621c01df1d07p1172edjsn74e33213befb"
    depends_on:
      - server
    networks:
      - app-network

  server:
    build:
      context: ./server  # 假设你的后端 Dockerfile 在 backend 文件夹中
      dockerfile: Dockerfile # 或者你的后端 Dockerfile 的文件名
    ports:
      - "5000:5000"
    environment:
      # 后端应用连接 MongoDB 所需的环境变量
      MONGODB_URI: "mongodb://mongodb:27017/ani" # 连接到 mongodb 服务，数据库名称为 your_test_database
      NODE_ENV: "development" # 设置为开发环境，方便测试
      # 其他后端应用需要的环境变量
    depends_on:
      - mongodb
    networks:
      - app-network

  mongodb:
    image: mongo:6.0.4 # 使用最新版本的 MongoDB 官方镜像
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db # 将 MongoDB 数据持久化到宿主机的 mongodb_data 卷
    environment:
      - MONGO_INITDB_DATABASE=ani
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data: # 定义 mongodb_data 卷
